class Solution {
public:
    vector<int> partitionLabels(string S) {
        
        vector<int> result;
        map<char,int> m;
        map<char,int>::iterator itr;
        for(int i=0; i<S.length();i++){
            itr=m.find(S[i]);
            if(itr == m.end()){
                m.insert(pair<char,int>(S[i],i));
            }else{
                itr->second = i;
            }
        }
        
        int last_idx = INT_MIN;
        int start_idx = 0;
        
        for(int i=0; i<S.length();i++){
            if(m[S[i]] > last_idx){
                last_idx = m[S[i]];
            }
            
            if(last_idx == i){
                result.push_back(last_idx - start_idx +1);
                
                if(i != S.length()-1){
                  start_idx= i+1;  
                }   
                last_idx=INT_MIN;
            }
        }
        
        return result;
    }
};
