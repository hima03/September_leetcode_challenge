/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void traverse (TreeNode* root, vector<int> &v)
    {
       if(root == NULL)
       {
           return;
       }
       traverse(root->left,v);
       v.push_back(root->val);
       traverse(root->right,v);
    }
    
       
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        
        vector<int> res, tree1, tree2;
        traverse(root1, tree1);
        traverse(root2, tree2);
        cout<<tree1.size();
        //using merge function in STL vector, which will merge and sort the two vectors
        merge(tree1.begin(), tree1.end(), tree2.begin(), tree2.end(), back_inserter(res));
        
        return res;
    
   }

   
};
